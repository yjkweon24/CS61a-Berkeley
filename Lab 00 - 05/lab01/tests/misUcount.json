{"countData": {"andshrtcirtruthy": 2, "andshrtcirtruthy-and": 2, "andshrtcirtruthy-shortcircuit": 2, "boolexprrtnbool": 3, "boolexprrtnbool-and": 3, "boolexprrtnbool-or": 3, "swapandor": 2, "swapandor-and": 2, "swapandor-or": 2, "swapandor-shortcircuit": 2, "noevalexpr": 1, "noevalexpr-evalexpr": 1, "zerodivdsnterr": 1, "zerodivdsnterr-zerodiverror": 1, "sloppyloopcondition": 1, "sloppyloopcondition-sloppy": 1, "sloppyifcondition": 2, "sloppyifcondition-sloppy": 2, "nfloordivnisweird": 1, "nfloordivnisweird-divisiontype": 1, "sloppyarith": 1, "sloppyarith-sloppy": 1, "notdoesnothing": 1, "notdoesnothing-not": 1, "wrnboolopprecedence": 1, "wrnboolopprecedence-boolorderofoperations": 1, "sloppyvareval": 1, "sloppyvareval-sloppy": 1}, "answerDict": {">>> True and 13\nLOCKED_ANSWER\n>>> False or 0\nLOCKED_ANSWER\n>>> not 10\nLOCKED_ANSWER\n>>> not None\nLOCKED_ANSWER\n": ["['True']"], ">>> True and 13\n13\n>>> False or 0\n0\n>>> not 10\nFalse\n>>> not None\nLOCKED_ANSWER\n": ["['1']"], ">>> True and 1 / 0 and False\nLOCKED_ANSWER\n>>> True or 1 / 0 or False\nLOCKED_ANSWER\n>>> True and 0\nLOCKED_ANSWER\n>>> False or 1\nLOCKED_ANSWER\n>>> 1 and 3 and 6 and 10 and 15\nLOCKED_ANSWER\n>>> 0 or False or 2 or 1 / 0\nLOCKED_ANSWER\n": ["['1 / 0']"], ">>> True and 1 / 0 and False\nError\n>>> True or 1 / 0 or False\nTrue\n>>> True and 0\n0\n>>> False or 1\nLOCKED_ANSWER\n>>> 1 and 3 and 6 and 10 and 15\nLOCKED_ANSWER\n>>> 0 or False or 2 or 1 / 0\nLOCKED_ANSWER\n": ["['True']"], ">>> True and 1 / 0 and False\nError\n>>> True or 1 / 0 or False\nTrue\n>>> True and 0\n0\n>>> False or 1\n1\n>>> 1 and 3 and 6 and 10 and 15\n15\n>>> 0 or False or 2 or 1 / 0\nLOCKED_ANSWER\n": ["['1']"], ">>> n = 3\n>>> while n >= 0:\n...     n -= 1\n...     print(n)\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\n": ["['2', '1', '0', '']"], ">>> def go(n):\n...     if n % 2 != 0:\n...         print(n / 2)\n...         return\n...     while n > 0:\n...         print(n)\n...         n = n // 2\n>>> go(4)\nLOCKED_ANSWER\nLOCKED_ANSWER\nLOCKED_ANSWER\n>>> go(5)\nLOCKED_ANSWER\n": ["['2']", "['2.0']", "['']", "['4', '2', '0.5']"], ">>> 0 or True\nTrue\n>>> not '' or not 0 and False\nLOCKED_ANSWER\n>>> 13 and False\nLOCKED_ANSWER\n": ["['False']"], ">>> def xk(c, d):\n...     if c == 4:\n...         return 6\n...     elif d >= 4:\n...         return 6 + 7 + c\n...     else:\n...         return 25\n>>> xk(10, 10)\nLOCKED_ANSWER\n>>> xk(10, 6)\nLOCKED_ANSWER\n>>> xk(4, 6)\nLOCKED_ANSWER\n>>> xk(0, 0)\nLOCKED_ANSWER\n": ["['python3 -i lab01.py']"], ">>> def xk(c, d):\n...     if c == 4:\n...         return 6\n...     elif d >= 4:\n...         return 6 + 7 + c\n...     else:\n...         return 25\n>>> xk(10, 10)\n23\n>>> xk(10, 6)\nLOCKED_ANSWER\n>>> xk(4, 6)\nLOCKED_ANSWER\n>>> xk(0, 0)\nLOCKED_ANSWER\n": ["['19']"], ">>> def how_big(x):\n...     if x > 10:\n...         print('huge')\n...     elif x > 5:\n...         return 'big'\n...     elif x > 0:\n...         print('small')\n...     else:\n...         print(\"nothin'\")\n>>> how_big(7)\n'big'\n>>> how_big(12)\nhuge\n>>> how_big(1)\nsmall\n>>> how_big(-1)\nLOCKED_ANSWER\n": ["['nothin;']"]}}